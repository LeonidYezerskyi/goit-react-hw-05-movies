{"version":3,"file":"static/js/702.3431373f.chunk.js","mappings":"+PACA,EAA6B,4BAA7B,EAAsE,4BAAtE,EAAiH,8B,SCmDjH,EA5CoB,WAChB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAc,mCAAG,WAAOV,GAAP,uFAEfM,GAAa,GAFE,UAIOK,EAAAA,EAAAA,IAAgBX,GAJvB,OAITY,EAJS,OAKfR,EAAgBQ,EAAQC,SALT,gDAQfL,EAAS,KAAIM,SARE,yBAUfR,GAAa,GAVE,4EAAH,sDAcpBI,EAAeV,EAElB,GAAE,CAACA,KAGA,+BACKO,EAAMQ,OAAS,IACZ,wDAAgCR,KAEnCF,IAAa,SAACW,EAAA,EAAD,IACbb,EAAaY,OAASZ,EAAac,KAAI,SAAAC,GACpC,OACI,gBAAIC,UAAWC,EAAf,WACI,eAAGD,UAAWC,EAAd,qBAAuCF,EAAOG,OAA9C,QACA,uBAAIH,EAAOI,YAFqBJ,EAAOK,GAKlD,KACI,cAAGJ,UAAWC,EAAd,uDAGhB,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/ReviewsPage/Reviews.module.css?f8de","pages/ReviewsPage/ReviewsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"authorName\":\"Reviews_authorName__qQAjT\",\"reviewItem\":\"Reviews_reviewItem__Kjom4\",\"notification\":\"Reviews_notification__ZQgE0\"};","import Loader from 'components/Loader/Loader';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/api';\nimport css from './Reviews.module.css';\n\n\n\nconst ReviewsPage = () => {\n    const { movieId } = useParams();\n    const [movieReviews, setMovieReviews] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        const fetchMovieCast = async (movieId) => {\n            try {\n                setIsLoading(true);\n\n                const reviews = await getMovieReviews(movieId);\n                setMovieReviews(reviews.results);\n\n            } catch (err) {\n                setError(err.message);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchMovieCast(movieId);\n        // eslint-disable-next-line\n    }, [movieId]);\n\n    return (\n        <section>\n            {error.length > 0 && (\n                <p>Upss, Some error occured... {error}</p>\n            )}\n            {isLoading && <Loader />}\n            {movieReviews.length ? movieReviews.map(review => {\n                return (\n                    <li className={css.reviewItem} key={review.id}>\n                        <p className={css.authorName}>Author: {review.author} </p>\n                        <p>{review.content}</p>\n                    </li>\n                )\n            }\n            ) : (<p className={css.notification}>We dont have any reviews for this movie</p>)}\n        </section>\n    )\n}\n\nexport default ReviewsPage;"],"names":["movieId","useParams","useState","movieReviews","setMovieReviews","isLoading","setIsLoading","error","setError","useEffect","fetchMovieCast","getMovieReviews","reviews","results","message","length","Loader","map","review","className","css","author","content","id"],"sourceRoot":""}