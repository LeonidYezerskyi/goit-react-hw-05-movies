{"version":3,"file":"static/js/999.31c5b203.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","webpack://goit-react-hw-05-movies/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formSection\":\"SearchForm_formSection__dog72\",\"input\":\"SearchForm_input__HOxJo\",\"button\":\"SearchForm_button__UXY06\"};","import React, { useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport { useSearchParams } from 'react-router-dom';\n\nimport css from './SearchForm.module.css';\n\n\nconst SearchForm = ({ onSelectName = () => { } }) => {\n    const [name, setName] = useState('');\n    const [searchParams, setSearchParams] = useSearchParams();\n    const movieName = searchParams.get(\"query\") ?? \"\";\n    console.log(movieName)\n\n\n    const onChange = e => {\n        const searchName = e.target.value.trim();\n        setName(searchName);\n    };\n\n    const onSubmit = e => {\n        e.preventDefault();\n        onSelectName(name);\n        setSearchParams({ query: name });\n\n        reset();\n    };\n\n    const reset = () => {\n        setName('');\n    };\n\n    return (\n        <div className={css.formSection}>\n            <form onSubmit={onSubmit}>\n                <input\n                    className={css.input}\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    placeholder=\"Enter name to find the movie\"\n                    onChange={onChange}\n                    required\n                />\n                <button className={css.button} type=\"submit\">Search</button>\n            </form>\n        </div>\n    )\n}\n\nSearchForm.propTypes = {\n    onSelectName: PropTypes.func.isRequired\n}\n\nexport default SearchForm;","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesPage_moviesList__RPIho\",\"titleMovie\":\"MoviesPage_titleMovie__PvyjT\"};","import Loader from 'components/Loader/Loader';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport React, { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { getSearchMovie } from 'services/api';\nimport css from './MoviesPage.module.css';\n\nconst MoviesPage = () => {\n    const [name, setName] = useState('');\n    const [movies, setMovies] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    const location = useLocation();\n    const [searchParams] = useSearchParams();\n    const movieName = searchParams.get(\"query\") ?? \"\";\n    movieName && !name && setName(movieName)\n\n    useEffect(() => {\n        if (!name) return;\n\n        const fetchMovieByName = async name => {\n            try {\n                setIsLoading(true);\n                const { results } = await getSearchMovie(name);\n                setMovies(results);\n            } catch (err) {\n                setError(err.message);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchMovieByName(name);\n    }, [name]);\n\n    const onSelectName = name => {\n        setName(name);\n        setMovies([]);\n\n    };\n\n    return (\n        <div className={css.moviesList}>\n            <SearchForm onSelectName={onSelectName} />\n\n            {error.length > 0 && (\n                <p>Upss, Some error occured... {error}</p>\n            )}\n            {isLoading && <Loader />}\n            <ul>\n                {Boolean(movies?.length) &&\n                    movies.map(movie => {\n                        return (\n                            <li key={movie.id}>\n                                <Link to={`/movies/${movie.id}`} state={{ from: location }}><h2 className={css.titleMovie}>{movie.title}</h2></Link>\n                            </li>\n                        );\n                    })}\n            </ul>\n        </div>\n\n    )\n}\n\nexport default MoviesPage;","import axios from 'axios';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=0b64762ebc7274a2812ac6387d535224'\n  );\n  return data;\n};\n\nexport const getMovieDetails = async (movie_id = '') => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_id}?api_key=0b64762ebc7274a2812ac6387d535224&language=en-GB`\n  );\n  return data;\n};\n\nexport const getMovieCredits = async (movie_id = '') => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=0b64762ebc7274a2812ac6387d535224&language=en-GB`\n  );\n  return data;\n};\n\nexport const getMovieReviews = async (movie_id = '') => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_id}/reviews?api_key=0b64762ebc7274a2812ac6387d535224&language=en-GB&page=1`\n  );\n  return data;\n};\n\nexport const getSearchMovie = async (name = '') => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${name}&api_key=0b64762ebc7274a2812ac6387d535224&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};\n"],"names":["onSelectName","useState","name","setName","useSearchParams","searchParams","setSearchParams","movieName","get","console","log","reset","className","css","onSubmit","e","preventDefault","query","type","value","placeholder","onChange","searchName","target","trim","required","movies","setMovies","isLoading","setIsLoading","error","setError","location","useLocation","useEffect","fetchMovieByName","getSearchMovie","results","message","length","Loader","Boolean","map","movie","to","id","state","from","title","getTrendingMovies","axios","data","getMovieDetails","movie_id","getMovieCredits","getMovieReviews"],"sourceRoot":""}